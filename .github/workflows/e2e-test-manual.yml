name: Manual E2E Test Suite

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to test against'
        required: true
        default: 'master'
        type: string
      skip_docker_build:
        description: 'Skip Docker rebuild (use existing containers)'
        required: false
        default: false
        type: boolean
      test_filter:
        description: 'Run specific tests (optional - use Playwright test filters)'
        required: false
        default: ''
        type: string

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  manual-e2e-test-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: tests/e2e/package-lock.json

    - name: Set file/directory permissions
      run: |
        chmod 777 trust uploads modules templates_c cache mainfile.php ~/work/formulize/formulize

    - name: Stop existing containers (if any)
      run: |
        docker compose down --remove-orphans || true

    - name: Run Docker Compose up
      run: |
        if [ "${{ inputs.skip_docker_build }}" == "false" ]; then
          echo "Building and starting containers..."
          docker compose up -d --build
        else
          echo "Starting existing containers..."
          docker compose up -d
        fi

    - name: Wait for MySQL
      uses: smurfpandey/wait-for-it@main
      with:
        host: localhost
        port: 3306
        timeout: 60

    - name: Install dependencies
      run: npm ci
      working-directory: tests/e2e

    - name: Install Playwright Browsers
      run: npx playwright install firefox --with-deps
      working-directory: tests/e2e

    - name: Run Playwright tests
      env:
        E2E_TEST_ADMIN_USERNAME: "admin"
        E2E_TEST_ADMIN_PASSWORD: "password"
      run: |
        if [ -n "${{ inputs.test_filter }}" ]; then
          echo "Running filtered tests: ${{ inputs.test_filter }}"
          npx playwright test ${{ inputs.test_filter }} --reporter=line --reporter=github
        else
          echo "Running all tests"
          npx playwright test --reporter=line --reporter=github
        fi
      working-directory: tests/e2e

    - name: Clean up containers
      if: always()
      run: |
        docker compose down --remove-orphans
