import { test, expect } from '@playwright/test';
import { login } from '../utils';
import { E2E_TEST_ADMIN_USERNAME, E2E_TEST_ADMIN_PASSWORD } from './config';

test.describe('Build museum application', () => {
	test.beforeEach(async ({ page }) => {
		await login(page, E2E_TEST_ADMIN_USERNAME, E2E_TEST_ADMIN_PASSWORD);
	});
	test('Create groups', async ({ page }) => {
		await page.click('text=Admin');
		await page.getByRole('link', { name: 'arrow System' }).click();
		await page.getByRole('link', { name: 'Groups Groups' }).click();
		await page.locator('#name').fill('Ancient History');
		await page.getByRole('button', { name: 'Create New Group' }).click();
		await page.locator('#name').fill('Modern History');
		await page.getByRole('button', { name: 'Create New Group' }).click();
		await page.locator('#name').fill('Currator');
		await page.getByRole('button', { name: 'Create New Group' }).click();
		await expect(page.getByRole('table')).toContainText('Edit GroupsWebmastersModifyRegistered UsersModifyAnonymous UsersModifyAncient HistoryModify DeleteModern HistoryModify DeleteCurratorModify Delete');
	});
	test.describe('Artifacts form', () => {
		test('Create Artifacts form', async ({ page }) => {
			await page.click('text=Admin');
			await page.click('text=Create a new form');
			await page.getByLabel('What is the name of the form?').fill('');
			await page.getByLabel('What is the name of the form?').pressSequentially('Artifacts');
			await expect(page.locator('input[name="forms-form_handle"]')).toHaveValue('artifacts');
			await page.locator('#new-app-yes').check();
			await page.locator('#applications-name').fill('Museum');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts');
			await page.getByRole('	link', { name: 'Museum' }).click();
			await expect(page.getByRole('blockquote')).toContainText('Form: Artifacts');
		});
		test('Login loads artifacts view', async ({ page }) => {
			await expect(page.locator('#controls')).toContainText('Artifacts List Showing: STANDARD VIEWS: Entries by me Entries by all users in my group(s) Entries by all users in all groups Entries by all users in...[pick groups] Add one entry Add multiple entries Change columns ...');
			await expect(page.locator('#formulize-list-of-entries')).toContainText('No entries were found in the current view that match the current search terms.');
		});
		test('Clicking admin link on artifacts view goes to artifacts list screen config', async ({ page }) => {
			await expect(page.locator('#controls')).toContainText('Artifacts List Showing: STANDARD VIEWS: Entries by me Entries by all users in my group(s) Entries by all users in all groups Entries by all users in...[pick groups] Add one entry Add multiple entries Change columns ...');
			await expect(page.locator('#formulize-list-of-entries')).toContainText('No entries were found in the current view that match the current search terms.');
			await page.click('text=Admin');
			await expect(page.getByRole('heading')).toContainText('Screen: Artifacts List');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts » Artifacts List');
		});
		test('Create ID number field', async ({ page }) => {
			await page.click('text=Admin');
			await page.click('text=Artifacts');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Text box', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('ID number');
			await page.locator('input[name="elements-ele_colhead"]').fill('Artifact ID Number');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('artifacts_id_number');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Artifact ID Number (Textbox)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts » Artifact ID Number');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await expect(page.locator('#drawer-2-1')).toContainText('Artifact ID NumberTextbox - artifacts_id_number');
		});
		test('Create Short name field', async ({ page }) => {
			await page.click('text=Admin');
			await page.click('text=Artifacts');
			await page.getByRole('link', { name: 'Artifacts' }).click();
   		await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Text box', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Short name');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('artifacts_short_name');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Short name (Textbox)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts » Short name');
			await page.getByRole('link', { name: 'Artifacts' }).click();
   		await expect(page.locator('#drawer-2-2')).toContainText('Short nameTextbox - artifacts_short_name');
		});
		test('Create Full Description field', async ({ page }) => {
			await page.click('text=Admin');
			await page.click('text=Artifacts');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Multi-line text box', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Full Description');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('artifacts_full_description');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Full Description (Multi-line text box)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts » Full Description');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await expect(page.locator('#drawer-2-3')).toContainText('Multi-line text box - artifacts_full_description');
		});
		test('Create Height field', async ({ page }) => {
			await page.click('text=Admin');
			await page.click('text=Artifacts');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			 await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Text box', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Height');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('artifacts_height');
			await page.locator('textarea[name="elements-ele_desc"]').fill('in cm');
			await page.getByRole('link', { name: 'Options' }).click();
			await page.getByLabel('Numbers Only', { exact: true }).check();
			await page.getByLabel('Number of decimal places:').fill('1');
			await page.getByRole('link', { name: 'Advanced' }).click();
			await page.getByLabel('Store as a number with decimal places (decimal)').check();
			await page.locator('#element_datatype_decimalsize').fill('1');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Height (Textbox)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts » Height');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			 await expect(page.locator('#drawer-2-4')).toContainText('HeightTextbox - artifacts_height');
		});
		test('Create Width field', async ({ page }) => {
			await page.click('text=Admin');
			await page.click('text=Artifacts');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Text box', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Width');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('artifacts_width');
			await page.locator('textarea[name="elements-ele_desc"]').fill('in cm');
			await page.getByRole('link', { name: 'Options' }).click();
			await page.getByLabel('Numbers Only', { exact: true }).check();
			await page.getByLabel('Number of decimal places:').fill('1');
			await page.getByRole('link', { name: 'Advanced' }).click();
			await page.getByLabel('Store as a number with decimal places (decimal)').check();
			await page.locator('#element_datatype_decimalsize').fill('1');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Width (Textbox)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts » Width');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await expect(page.locator('#drawer-2-5')).toContainText('WidthTextbox - artifacts_width');
		});
		test('Create Depth field', async ({ page }) => {
			await page.click('text=Admin');
			await page.click('text=Artifacts');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			 await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Text box', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Depth');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('artifacts_depth');
			await page.locator('textarea[name="elements-ele_desc"]').fill('in cm');
			await page.getByRole('link', { name: 'Options' }).click();
			await page.getByLabel('Numbers Only', { exact: true }).check();
			await page.getByLabel('Number of decimal places:').fill('1');
			await page.getByRole('link', { name: 'Advanced' }).click();
			await page.getByLabel('Store as a number with decimal places (decimal)').check();
			await page.locator('#element_datatype_decimalsize').fill('1');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Depth (Textbox)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts » Depth');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await expect(page.locator('#drawer-2-6')).toContainText('DepthTextbox - artifacts_depth');
		});
		test('Create Dimensions field', async ({ page }) => {
			await page.click('text=Admin');
			await page.click('text=Artifacts');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Table of existing elements', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Dimensions');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('artifacts_dimensions');
			await page.getByRole('link', { name: 'Options' }).click();
	  	await page.getByLabel('Enter the captions for the columns of this table*').fill('Height,Width,Depth');
			await page.getByLabel('Choose the first element,').selectOption('5');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Dimensions (Table of existing elements)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts » Dimensions');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await expect(page.locator('#drawer-2-7')).toContainText('DimensionsTable of existing elements - artifacts_dimensions');
		});
		test('Create Year field', async ({ page }) => {
			await page.click('text=Admin');
			await page.click('text=Artifacts');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Text box', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('Year');
			await page.locator('input[name="elements-ele_handle"]').fill('artifacts_year_of_origin');
			await page.getByRole('link', { name: 'Options' }).click();
			await page.getByLabel('Numbers Only', { exact: true }).check();
			await page.getByLabel('Number of decimal places:').fill('0');
			await page.getByRole('link', { name: 'Advanced' }).click();
			await page.getByLabel('Store as a number with no decimal places (int)').check();
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Year (Textbox)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts » Year');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await expect(page.locator('#drawer-2-8')).toContainText('YearTextbox - artifacts_year_of_origin');
		});
		test('Create Era field', async ({ page }) => {
			await page.click('text=Admin');
			await page.click('text=Artifacts');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Radio buttons', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Era');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('artifacts_era');
			await page.getByRole('link', { name: 'Options' }).click();
			await page.locator('input[name="ele_value\\[0\\]"]').fill('CE');
			await page.getByRole('button', { name: 'Add' }).click();
			await page.locator('input[name="ele_value\\[1\\]"]').fill('BCE');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Era (Radio buttons)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts » Era');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await expect(page.locator('#drawer-2-9')).toContainText('EraRadio buttons - artifacts_era');
		});
		test('Create Year-Era field', async ({ page }) => {
			await page.click('text=Admin');
			await page.click('text=Artifacts');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Value derived from other elements', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Year-Era');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('artifacts_year_era');
			await page.getByRole('link', { name: 'Options' }).click();
			await page.getByRole('group', { name: 'Formula for generating values' }).getByRole('textbox').fill('');
			await page.getByRole('group', { name: 'Formula for generating values' }).getByRole('textbox').fill('<?php\n$value = "artifacts_year_of_origin"."artifacts_era";');
   		await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Year-Era (Value derived from other elements)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Artifacts » Year-Era');
			await page.getByRole('link', { name: 'Artifacts' }).click();
			await expect(page.locator('#drawer-2-10')).toContainText('Year-EraValue derived from other elements - artifacts_year_era');
		});
	});

	test.describe('Collections form', () => {
		test('Create Collections form', async ({ page }) => {
			await page.click('text=Admin');
			await page.getByRole('link', { name: 'Home', exact: true }).click();
   		await page.getByRole('link', { name: 'Create a new form' }).click();
			await page.getByLabel('What is the name of the form?').fill('');
			await page.getByLabel('What is the name of the form?').pressSequentially('Collections');
			await expect(page.locator('input[name="forms-form_handle"]')).toHaveValue('collections');
			await page.locator('#apps').selectOption('1');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Collections');
			await page.getByRole('	link', { name: 'Museum' }).click();
			await expect(page.getByRole('blockquote')).toContainText('Form: Collections');
		});
		test('Login loads list of pages', async ({ page }) => {
			await expect(page.locator('#formulize')).toContainText('Museum Artifacts Collections');
		});
		test('Clicking Collections link goes to Collections list', async ({ page }) => {
			await expect(page.locator('#formulize')).toContainText('Museum Artifacts Collections');
			await page.getByRole('row').getByRole('link', { name: 'Collections' }).click();
			await expect(page.locator('#controls')).toContainText('Collections List Showing: STANDARD VIEWS: Entries by me Entries by all users in my group(s) Entries by all users in all groups Entries by all users in...[pick groups] Add one entry Add multiple entries Change columns ...');
   		await expect(page.locator('#formulize-list-of-entries')).toContainText('No entries were found in the current view that match the current search terms.');
		});
		test('Clicking admin link on Collections view goes to Collections list screen config', async ({ page }) => {
			await expect(page.locator('#formulize')).toContainText('Museum Artifacts Collections');
			await page.getByRole('row').getByRole('link', { name: 'Collections' }).click();
   		await page.getByRole('link', { name: 'Admin' }).click();
			await expect(page.getByRole('heading')).toContainText('Screen: Collections List');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Collections » Collections List');
		});
		test('Create Collections Name field', async ({ page }) => {
			await page.getByRole('row').getByRole('link', { name: 'Collections' }).click();
			await page.getByRole('link', { name: 'Admin' }).click();
			await page.getByRole('link', { name: 'Collections', exact: true }).click();
   		await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Text box', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Name');
			await page.locator('input[name="elements-ele_colhead"]').fill('Collection Name');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('collections_name');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Collection Name (Textbox)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Collections » Collection Name');
			await page.getByRole('link', { name: 'Collections' }).click();
   		await expect(page.locator('#drawer-2-1')).toContainText('Collection NameTextbox - collections_name');
		});
		test('Create Collections Artifacts field', async ({ page }) => {
			await page.getByRole('row').getByRole('link', { name: 'Collections' }).click();
			await page.getByRole('link', { name: 'Admin' }).click();
			await page.getByRole('link', { name: 'Collections', exact: true }).click();
   		await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Dropdowns, autocompletes, list boxes (HTML <select>)', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Artifacts');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('collections_artifacts');
			await page.getByRole('link', { name: 'Options' }).click();
			await page.getByLabel('This is a "autocompletion"').check();
			await page.locator('#elements_multiple_allowed_auto').check();
			await page.locator('#yes').check();
			await page.locator('#formlink').selectOption('1');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await page.locator('[id="elements-ele_value\\[17\\]"]').selectOption(['1', '2']);
			await page.locator('[id="elements-ele_value\\[10\\]"]').selectOption(['1', '2']);
			await page.locator('[id="elements-ele_value\\[11\\]"]').selectOption(['1', '2']);
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Artifacts (Autocomplete box)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Collections » Artifacts');
			await page.getByRole('link', { name: 'Collections' }).click();
   		await expect(page.locator('#drawer-2-2')).toContainText('ArtifactsAutocomplete box - collections_artifacts');
		});
	});

	test.describe('Exhibits form', () => {
		test('Create Exhibits form', async ({ page }) => {
			await page.click('text=Admin');
   		await page.getByRole('link', { name: 'Create a new form' }).click();
			await page.getByLabel('What is the name of the form?').fill('');
			await page.getByLabel('What is the name of the form?').pressSequentially('Exhibits');
			await expect(page.locator('input[name="forms-form_handle"]')).toHaveValue('exhibits');
			await page.locator('#apps').selectOption('1');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Exhibits');
			await page.getByRole('link', { name: 'Museum' }).click();
			await expect(page.getByRole('blockquote')).toContainText('Form: Exhibits');
		});
		test('Login loads list of pages', async ({ page }) => {
			await expect(page.locator('#formulize')).toContainText('Museum Artifacts Collections Exhibits');
		});
		test('Clicking Exhibits link goes to Exhibits list', async ({ page }) => {
			await expect(page.locator('#formulize')).toContainText('Museum Artifacts Collections Exhibits');
			await page.getByRole('row').getByRole('link', { name: 'Exhibits' }).click();
			await expect(page.locator('#controls')).toContainText('Exhibits List Showing: STANDARD VIEWS: Entries by me Entries by all users in my group(s) Entries by all users in all groups Entries by all users in...[pick groups] Add one entry Add multiple entries Change columns ...');
   		await expect(page.locator('#formulize-list-of-entries')).toContainText('No entries were found in the current view that match the current search terms.');
		});
		test('Clicking admin link on Exhibits view goes to Exhibits list screen config', async ({ page }) => {
			await expect(page.locator('#formulize')).toContainText('Museum Artifacts Collections Exhibits');
			await page.getByRole('row').getByRole('link', { name: 'Exhibits' }).click();
   		await page.getByRole('link', { name: 'Admin' }).click();
			await expect(page.getByRole('heading')).toContainText('Screen: Exhibits List');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Exhibits » Exhibits List');
		});
		test('Create Exhibit Name field', async ({ page }) => {
			await page.getByRole('row').getByRole('link', { name: 'Exhibits' }).click();
			await page.getByRole('link', { name: 'Admin' }).click();
			await page.getByRole('link', { name: 'Exhibits', exact: true }).click();
   		await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Text box', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Name');
			await page.locator('input[name="elements-ele_colhead"]').fill('Exhibit Name');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('exhibits_name');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Exhibit Name (Textbox)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Exhibits » Exhibit Name');
			await page.getByRole('link', { name: 'Exhibits' }).click();
   		await expect(page.locator('#drawer-2-1')).toContainText('Exhibit NameTextbox - exhibits_name');
		});
		test('Create Exhibits Artifacts field', async ({ page }) => {
			await page.getByRole('row').getByRole('link', { name: 'Exhibits' }).click();
			await page.getByRole('link', { name: 'Admin' }).click();
			await page.getByRole('link', { name: 'Exhibits', exact: true }).click();
   		await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Dropdowns, autocompletes, list boxes (HTML <select>)', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Artifacts');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('exhibits_artifacts');
			await page.getByRole('link', { name: 'Options' }).click();
			await page.getByLabel('This is a "autocompletion"').check();
			await page.locator('#elements_multiple_allowed_auto').check();
			await page.locator('#yes').check();
			await page.locator('#formlink').selectOption('1');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await page.locator('[id="elements-ele_value\\[17\\]"]').selectOption(['1', '2']);
			await page.locator('[id="elements-ele_value\\[10\\]"]').selectOption(['1', '2']);
			await page.locator('[id="elements-ele_value\\[11\\]"]').selectOption(['1', '2']);
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Artifacts (Autocomplete box)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Exhibits » Artifacts');
			await page.getByRole('link', { name: 'Exhibits' }).click();
   		await expect(page.locator('#drawer-2-2')).toContainText('ArtifactsAutocomplete box - exhibits_artifacts');
		});
		test('Create Exhibits Collection field', async ({ page }) => {
			await page.getByRole('row').getByRole('link', { name: 'Exhibits' }).click();
			await page.getByRole('link', { name: 'Admin' }).click();
			await page.getByRole('link', { name: 'Exhibits', exact: true }).click();
   		await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Dropdowns, autocompletes, list boxes (HTML <select>)', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Collection');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('exhibits_collection');
			await page.getByRole('link', { name: 'Options' }).click();
			await page.locator('#yes').check();
			await page.locator('#element-formlink_scope').selectOption(['4', '5', '6']);
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Collection (Dropdown box)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Exhibits » Collection');
			await page.getByRole('link', { name: 'Exhibits' }).click();
   		await expect(page.locator('#drawer-2-3')).toContainText('CollectionDropdown box - exhibits_collection');
		});
	});

	test.describe('Survey form', () => {
		test('Create Survey form', async ({ page }) => {
			await page.click('text=Admin');
   		await page.getByRole('link', { name: 'Create a new form' }).click();
			await page.getByLabel('What is the name of the form?').fill('');
			await page.getByLabel('What is the name of the form?').pressSequentially('Survey');
			await expect(page.locator('input[name="forms-form_handle"]')).toHaveValue('survey');
			await page.locator('#apps').selectOption('1');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Survey');
			await page.getByRole('link', { name: 'Museum' }).click();
			await expect(page.getByRole('blockquote')).toContainText('Form: Survey');
		});
		test('Login loads list of pages', async ({ page }) => {
			await expect(page.locator('#formulize')).toContainText('Museum Artifacts Collections Exhibits Survey');
		});
		test('Clicking Survey link goes to Survey list', async ({ page }) => {
			await expect(page.locator('#formulize')).toContainText('Museum Artifacts Collections Exhibits Survey');
			await page.getByRole('row').getByRole('link', { name: 'Survey' }).click();
			await expect(page.locator('#controls')).toContainText('Survey List Showing: STANDARD VIEWS: Entries by me Entries by all users in my group(s) Entries by all users in all groups Entries by all users in...[pick groups] Add one entry Add multiple entries Change columns ...');
   		await expect(page.locator('#formulize-list-of-entries')).toContainText('No entries were found in the current view that match the current search terms.');
		});
		test('Clicking admin link on Survey view goes to Survey list screen config', async ({ page }) => {
			await expect(page.locator('#formulize')).toContainText('Museum Artifacts Collections Exhibits Survey');
			await page.getByRole('row').getByRole('link', { name: 'Survey' }).click();
   		await page.getByRole('link', { name: 'Admin' }).click();
			await expect(page.getByRole('heading')).toContainText('Screen: Survey List');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Survey » Survey List');
		});
		test('Create First name field', async ({ page }) => {
			await page.getByRole('row').getByRole('link', { name: 'Survey' }).click();
			await page.getByRole('link', { name: 'Admin' }).click();
			await page.getByRole('link', { name: 'Survey', exact: true }).click();
   		await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Text box', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('First name');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('survey_first_name');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: First name (Textbox)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Survey » First name');
			await page.getByRole('link', { name: 'Survey' }).click();
   		await expect(page.locator('#drawer-2-1')).toContainText('First nameTextbox - survey_first_name');
		});
		test('Create Last name field', async ({ page }) => {
			await page.getByRole('row').getByRole('link', { name: 'Survey' }).click();
			await page.getByRole('link', { name: 'Admin' }).click();
			await page.getByRole('link', { name: 'Survey', exact: true }).click();
   		await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Text box', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Last name');
			await expect(page.locator('input[name="elements-ele_handle"]')).toHaveValue('survey_last_name');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Last name (Textbox)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Survey » Last name');
			await page.getByRole('link', { name: 'Survey' }).click();
   		await expect(page.locator('#drawer-2-2')).toContainText('Last nameTextbox - survey_last_name');
		});
		test('Create Which exhibit did you see? field', async ({ page }) => {
			await page.getByRole('row').getByRole('link', { name: 'Survey' }).click();
			await page.getByRole('link', { name: 'Admin' }).click();
			await page.getByRole('link', { name: 'Survey', exact: true }).click();
   		await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Dropdowns, autocompletes, list boxes (HTML <select>)', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Which exhibit did you see?');
			await page.locator('input[name="elements-ele_handle"]').fill('survey_exhibit');
			await page.getByRole('link', { name: 'Options' }).click();
			await page.locator('#yes').check();
			await page.locator('#formlink').selectOption('14');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Which exhibit did you see? (Dropdown box)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Survey » Which exhibit did you see?');
			await page.getByRole('link', { name: 'Survey' }).click();
   		await expect(page.locator('#drawer-2-3')).toContainText('Which exhibit did you see?Dropdown box - survey_exhibit');
		});
		test('Create Which artifact was your favourite? field', async ({ page }) => {
			await page.getByRole('row').getByRole('link', { name: 'Survey' }).click();
			await page.getByRole('link', { name: 'Admin' }).click();
			await page.getByRole('link', { name: 'Survey', exact: true }).click();
   		await page.getByRole('link', { name: 'Elements', exact: true }).click();
			await page.getByRole('link', { name: 'Dropdowns, autocompletes, list boxes (HTML <select>)', exact: true }).click();
			await page.locator('input[name="elements-ele_caption"]').fill('');
			await page.locator('input[name="elements-ele_caption"]').pressSequentially('Which artifact was your favourite?');
			await page.locator('input[name="elements-ele_handle"]').fill('survey_fav_artifact');
			await page.getByRole('link', { name: 'Options' }).click();
			await page.locator('#yes').check();
			await page.locator('#formlink').selectOption('2');
			await page.locator('[id="elements-ele_value\\[optionsLimitByElement\\]"]').selectOption('15');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await page.locator('#new_optionsLimitByElementFilter_element').selectOption('14');
			await page.locator('#new_optionsLimitByElementFilter_term').fill('{survey_exhibit}');
			await page.getByRole('button', { name: 'Save your changes' }).click();
			await expect(page.getByRole('heading')).toContainText('Element: Which artifact was your... (Dropdown box)');
			await expect(page.locator('#admin-breadcrumbs')).toContainText('Home » Museum » Survey » Which artifact was your...');
			await page.getByRole('link', { name: 'Survey' }).click();
   		await expect(page.locator('#drawer-2-4')).toContainText('Which artifact was your favourite?Dropdown box - survey_fav_artifact');
		});
	});
});
