SETTING UP A DATABASE
SQL files in the /docker/mariadb/seed/ folder will be parsed and run (in alphabetical order) when the MariaDB Docker container starts, if it has no database setup already.

Note: make sure your sql files are UTF8 encoded!! Depending on OS, etc, you may need to convert the encoding of the file prior to starting Docker.

PERSISTING A DATABASE BETWEEN SESSIONS
The database is stored in a docker volume. Previous iterations of our docker compose configuration had the data directory mounted on the host's file system. We chose to move to storing the files in a docker linux volume to alleviate any compatibility issues with how different operating systems handle case sensitivity.

The database is stored in the `FOLDERNAME_mariadb_data` volume (Where FOLDERNAME is the directory name of your formulize codebase). This volume is created when you run `docker compose up` for the first time. It is persisted between runs and will remain persistent even if you perform a `docker compose down` operation.

DELETING THE DATABASE/STARTING OVER
In order to purge your volume perform a `docker compose down -v`Â to ensure volumes are deleted as well containers

GETTING A DUMP OF A PRODUCTION DATABASE
To get a dump of a live database from a server, to use as a seed (see above), you can export it from phpmyadmin, or whatever control panel your server uses. If the .sql file does not work, you may get better results by manually running mysqldump on the command line with the --single_transaction flag. Doing so will cause the generated SQL to be structured differently and more simply.

GETTING A DUMP OF YOUR LOCAL DATABASE
If you're using the Docker setup in Formulize, you can dump the DB to a file like this (in a Powershell terminal):

docker exec formulize-mariadb-1 mariadb-dump --user user --password=password --default-character-set=utf8mb4 --databases formulize > formulize.sql

RUNNING SQL AGAINST YOUR LOCAL DATABASE
You can run sql against the DB manually by putting a .sql file in the /docker/mariadb/seed folder and then doing this:

docker exec formulize-mariadb-1 /bin/sh -c 'mariadb -u user --password=password </docker-entrypoint-initdb.d/formulize.sql'

Remember that .sql files in the /docker/mariadb/seed/ folder will also be parsed and run when the MariaDB container starts, if there is no database already in the volume (see Persisting above).

CONNECTING TO MARIADB DIRECTLY
From outside Docker, you can connect directly to MariaDB through localhost:3306 but if you are connecting from the web container in Docker, then you need to use mariadb:3306

GETTING TO THE COMMAND LINE ON A DOCKER CONTAINER
You can bring up the command line on any container by refencing the container name in a command like this:

docker exec -it formulize-mariadb-1 bash

Once on the command line of the MariaDB container, you can access MariaDB's console with this:

mariadb --user user --password=password

ROOT PASSWORD FOR MARIADB
The root password for accessing MariaDB is abc123 (as specified in the docker-compose.yml file)
